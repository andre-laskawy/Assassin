// <auto-generated />
using Assassin.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Assassin.Data.Migrations
{
    [DbContext(typeof(AssassinDataContext))]
    partial class AssassinDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Assassin.Common.Models.BaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Archived");

                    b.Property<DateTime>("CreatedDT");

                    b.Property<string>("JsonAttributes");

                    b.Property<DateTime>("ModifiedDT");

                    b.Property<bool>("Synced");

                    b.Property<string>("TypeDiscriptor");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDT");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ModifiedDT");

                    b.HasIndex("TypeDiscriptor");

                    b.ToTable("BaseModel");
                });

            modelBuilder.Entity("Assassin.Common.Models.Relation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("EntityId")
                        .IsRequired();

                    b.Property<Guid?>("RelatedEntityId");

                    b.Property<string>("RelationName");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("RelatedEntityId");

                    b.ToTable("Relation");
                });

            modelBuilder.Entity("Assassin.Common.Models.Relation", b =>
                {
                    b.HasOne("Assassin.Common.Models.BaseModel", "Entity")
                        .WithMany("Relations")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Assassin.Common.Models.BaseModel", "RelatedEntity")
                        .WithMany()
                        .HasForeignKey("RelatedEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
